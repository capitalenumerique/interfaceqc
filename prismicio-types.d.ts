// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from '@prismicio/client';

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type HomeDocumentDataSlicesSlice = AlternateGridSlice | HeroSlice;

/**
 * Content for Home documents
 */
interface HomeDocumentData {
    /**
     * Slice Zone field in *Home*
     *
     * - **Field Type**: Slice Zone
     * - **Placeholder**: *None*
     * - **API ID Path**: home.slices[]
     * - **Tab**: Main
     * - **Documentation**: https://prismic.io/docs/field#slices
     */
    slices: prismic.SliceZone<HomeDocumentDataSlicesSlice> /**
     * Meta Title field in *Home*
     *
     * - **Field Type**: Text
     * - **Placeholder**: A title of the page used for social media and search engines
     * - **API ID Path**: home.meta_title
     * - **Tab**: SEO & Metadata
     * - **Documentation**: https://prismic.io/docs/field#key-text
     */;
    meta_title: prismic.KeyTextField;

    /**
     * Meta Description field in *Home*
     *
     * - **Field Type**: Text
     * - **Placeholder**: A brief summary of the page
     * - **API ID Path**: home.meta_description
     * - **Tab**: SEO & Metadata
     * - **Documentation**: https://prismic.io/docs/field#key-text
     */
    meta_description: prismic.KeyTextField;

    /**
     * Meta Image field in *Home*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: home.meta_image
     * - **Tab**: SEO & Metadata
     * - **Documentation**: https://prismic.io/docs/field#image
     */
    meta_image: prismic.ImageField<never>;
}

/**
 * Home document from Prismic
 *
 * - **API ID**: `home`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomeDocument<Lang extends string = string> = prismic.PrismicDocumentWithoutUID<
    Simplify<HomeDocumentData>,
    'home',
    Lang
>;

export type AllDocumentTypes = HomeDocument;

/**
 * Item in *AlternateGrid → Default → Primary → items*
 */
export interface AlternateGridSliceDefaultPrimaryItemsItem {
    /**
     * title field in *AlternateGrid → Default → Primary → items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.default.primary.items[].title
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    title: prismic.RichTextField;

    /**
     * description field in *AlternateGrid → Default → Primary → items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.default.primary.items[].description
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    description: prismic.RichTextField;
}

/**
 * Item in *AlternateGrid → Image Right → Primary → items*
 */
export interface AlternateGridSliceImageRightPrimaryItemsItem {
    /**
     * title field in *AlternateGrid → Image Right → Primary → items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.imageRight.primary.items[].title
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    title: prismic.RichTextField;

    /**
     * description field in *AlternateGrid → Image Right → Primary → items*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.imageRight.primary.items[].description
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    description: prismic.RichTextField;
}

/**
 * Primary content in *AlternateGrid → Default → Primary*
 */
export interface AlternateGridSliceDefaultPrimary {
    /**
     * eyebrowHeadline field in *AlternateGrid → Default → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: Eyebrow
     * - **API ID Path**: alternate_grid.default.primary.eyebrowHeadline
     * - **Documentation**: https://prismic.io/docs/field#key-text
     */
    eyebrowHeadline: prismic.KeyTextField;

    /**
     * title field in *AlternateGrid → Default → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.default.primary.title
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    title: prismic.RichTextField;

    /**
     * description field in *AlternateGrid → Default → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.default.primary.description
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    description: prismic.RichTextField;

    /**
     * image field in *AlternateGrid → Default → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.default.primary.image
     * - **Documentation**: https://prismic.io/docs/field#image
     */
    image: prismic.ImageField<never>;

    /**
     * items field in *AlternateGrid → Default → Primary*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.default.primary.items[]
     * - **Documentation**: https://prismic.io/docs/field#group
     */
    items: prismic.GroupField<Simplify<AlternateGridSliceDefaultPrimaryItemsItem>>;
}

/**
 * Default variation for AlternateGrid Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type AlternateGridSliceDefault = prismic.SharedSliceVariation<
    'default',
    Simplify<AlternateGridSliceDefaultPrimary>,
    never
>;

/**
 * Primary content in *AlternateGrid → Image Right → Primary*
 */
export interface AlternateGridSliceImageRightPrimary {
    /**
     * eyebrowHeadline field in *AlternateGrid → Image Right → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: Eyebrow
     * - **API ID Path**: alternate_grid.imageRight.primary.eyebrowHeadline
     * - **Documentation**: https://prismic.io/docs/field#key-text
     */
    eyebrowHeadline: prismic.KeyTextField;

    /**
     * title field in *AlternateGrid → Image Right → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.imageRight.primary.title
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    title: prismic.RichTextField;

    /**
     * description field in *AlternateGrid → Image Right → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.imageRight.primary.description
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    description: prismic.RichTextField;

    /**
     * image field in *AlternateGrid → Image Right → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.imageRight.primary.image
     * - **Documentation**: https://prismic.io/docs/field#image
     */
    image: prismic.ImageField<never>;

    /**
     * items field in *AlternateGrid → Image Right → Primary*
     *
     * - **Field Type**: Group
     * - **Placeholder**: *None*
     * - **API ID Path**: alternate_grid.imageRight.primary.items[]
     * - **Documentation**: https://prismic.io/docs/field#group
     */
    items: prismic.GroupField<Simplify<AlternateGridSliceImageRightPrimaryItemsItem>>;
}

/**
 * Image Right variation for AlternateGrid Slice
 *
 * - **API ID**: `imageRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type AlternateGridSliceImageRight = prismic.SharedSliceVariation<
    'imageRight',
    Simplify<AlternateGridSliceImageRightPrimary>,
    never
>;

/**
 * Slice variation for *AlternateGrid*
 */
type AlternateGridSliceVariation = AlternateGridSliceDefault | AlternateGridSliceImageRight;

/**
 * AlternateGrid Shared Slice
 *
 * - **API ID**: `alternate_grid`
 * - **Description**: AlternateGrid
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type AlternateGridSlice = prismic.SharedSlice<'alternate_grid', AlternateGridSliceVariation>;

/**
 * Primary content in *Hero → Default → Primary*
 */
export interface HeroSliceDefaultPrimary {
    /**
     * eyebrowHeadline field in *Hero → Default → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: Eyebrow
     * - **API ID Path**: hero.default.primary.eyebrowHeadline
     * - **Documentation**: https://prismic.io/docs/field#key-text
     */
    eyebrowHeadline: prismic.KeyTextField;

    /**
     * title field in *Hero → Default → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.default.primary.title
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    title: prismic.RichTextField;

    /**
     * description field in *Hero → Default → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.default.primary.description
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    description: prismic.RichTextField;

    /**
     * image field in *Hero → Default → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.default.primary.image
     * - **Documentation**: https://prismic.io/docs/field#image
     */
    image: prismic.ImageField<never>;

    /**
     * callToActionLink field in *Hero → Default → Primary*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.default.primary.callToActionLink
     * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
     */
    callToActionLink: prismic.LinkField;
}

/**
 * Default variation for Hero Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroSliceDefault = prismic.SharedSliceVariation<'default', Simplify<HeroSliceDefaultPrimary>, never>;

/**
 * Primary content in *Hero → Image Right → Primary*
 */
export interface HeroSliceImageRightPrimary {
    /**
     * eyebrowHeadline field in *Hero → Image Right → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: Eyebrow
     * - **API ID Path**: hero.imageRight.primary.eyebrowHeadline
     * - **Documentation**: https://prismic.io/docs/field#key-text
     */
    eyebrowHeadline: prismic.KeyTextField;

    /**
     * title field in *Hero → Image Right → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.imageRight.primary.title
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    title: prismic.RichTextField;

    /**
     * description field in *Hero → Image Right → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.imageRight.primary.description
     * - **Documentation**: https://prismic.io/docs/field#rich-text-title
     */
    description: prismic.RichTextField;

    /**
     * image field in *Hero → Image Right → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.imageRight.primary.image
     * - **Documentation**: https://prismic.io/docs/field#image
     */
    image: prismic.ImageField<never>;

    /**
     * callToActionLink field in *Hero → Image Right → Primary*
     *
     * - **Field Type**: Link
     * - **Placeholder**: *None*
     * - **API ID Path**: hero.imageRight.primary.callToActionLink
     * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
     */
    callToActionLink: prismic.LinkField;
}

/**
 * Image Right variation for Hero Slice
 *
 * - **API ID**: `imageRight`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroSliceImageRight = prismic.SharedSliceVariation<
    'imageRight',
    Simplify<HeroSliceImageRightPrimary>,
    never
>;

/**
 * Slice variation for *Hero*
 */
type HeroSliceVariation = HeroSliceDefault | HeroSliceImageRight;

/**
 * Hero Shared Slice
 *
 * - **API ID**: `hero`
 * - **Description**: Hero
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroSlice = prismic.SharedSlice<'hero', HeroSliceVariation>;

declare module '@prismicio/client' {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client<AllDocumentTypes>;
    }

    interface CreateWriteClient {
        (repositoryNameOrEndpoint: string, options: prismic.WriteClientConfig): prismic.WriteClient<AllDocumentTypes>;
    }

    interface CreateMigration {
        (): prismic.Migration<AllDocumentTypes>;
    }

    namespace Content {
        export type {
            HomeDocument,
            HomeDocumentData,
            HomeDocumentDataSlicesSlice,
            AllDocumentTypes,
            AlternateGridSlice,
            AlternateGridSliceDefaultPrimaryItemsItem,
            AlternateGridSliceDefaultPrimary,
            AlternateGridSliceImageRightPrimaryItemsItem,
            AlternateGridSliceImageRightPrimary,
            AlternateGridSliceVariation,
            AlternateGridSliceDefault,
            AlternateGridSliceImageRight,
            HeroSlice,
            HeroSliceDefaultPrimary,
            HeroSliceImageRightPrimary,
            HeroSliceVariation,
            HeroSliceDefault,
            HeroSliceImageRight,
        };
    }
}
